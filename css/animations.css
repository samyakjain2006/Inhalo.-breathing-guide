/* Base Orb Styles */
.orb {
  position: relative;
  width: 180px;
  height: 180px;
  margin: 0 auto;
  will-change: transform;
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1), 
              box-shadow 4s cubic-bezier(0.25, 0.1, 0.25, 1),
              background-color 4s cubic-bezier(0.25, 0.1, 0.25, 1);
  z-index: 5;
}

/* BREATHING ANIMATIONS */
.orb.breathing-in {
  transform: scale(1.2);
}

.orb.breathing-hold {
  transform: scale(1.2); /* Reduced from 1.3 to prevent overlap */
  animation: pulse 2s infinite ease-in-out;
}

.orb.breathing-out {
  transform: scale(0.8); /* Increased from 0.7 for better balance */
}

.orb.breathing-hold-small {
  transform: scale(0.8); /* Increased from 0.7 for better balance */
  animation: pulse 2s infinite ease-in-out;
}

@keyframes pulse {
  0% { opacity: 1; box-shadow: 0 0 30px rgba(99, 102, 241, 0.4); }
  50% { opacity: 0.8; box-shadow: 0 0 60px rgba(99, 102, 241, 0.7); }
  100% { opacity: 1; box-shadow: 0 0 30px rgba(99, 102, 241, 0.4); }
}

/* DEFAULT ORB - Improved with multi-layered box shadows */
.orb.default {
  background-color: var(--primary);
  border-radius: 50%;
  box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.3),
              0 0 0 0 rgba(99, 102, 241, 0.3),
              0 0 0 0 rgba(99, 102, 241, 0.3);
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1), 
              box-shadow 4s cubic-bezier(0.25, 0.1, 0.25, 1),
              background-color 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Inhale animation with expanding box shadows */
.orb.default.breathing-in {
  background-color: var(--primary-light);
  box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2),
              0 0 0 30px rgba(99, 102, 241, 0.15),
              0 0 0 45px rgba(99, 102, 241, 0.1);
}

/* Hold animation - keeping the same expanded state with pulsing effect */
.orb.default.breathing-hold {
  background-color: var(--primary-light);
  box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2),
              0 0 0 30px rgba(99, 102, 241, 0.15),
              0 0 0 45px rgba(99, 102, 241, 0.1);
  animation: orb-pulse 2s infinite ease-in-out;
  /* Ensure we keep transition properties during hold to make transition to exhale smooth */
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1), 
              box-shadow 4s cubic-bezier(0.25, 0.1, 0.25, 1),
              background-color 4s cubic-bezier(0.25, 0.1, 0.25, 1);
  /* Pause the animation at the end of the hold phase to prevent an abrupt transition */
  animation-play-state: running;
}

/* Exhale animation - improved transition from hold */
.orb.default.breathing-out {
  background-color: var(--primary-dark);
  /* Gradually reduce the box shadows instead of removing them completely */
  box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2), 
              0 0 0 30px rgba(99, 102, 241, 0.15), 
              0 0 0 45px rgba(99, 102, 241, 0.1);
  animation: exhale-shadows 4s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
  /* Keep the same transition timing to ensure smooth transition from hold to exhale */
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1), 
              background-color 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Hold small animation - keeping the same contracted state with subtle pulsing */
.orb.default.breathing-hold-small {
  background-color: var(--primary-dark);
  box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.3),
              0 0 0 0 rgba(99, 102, 241, 0.3),
              0 0 0 0 rgba(99, 102, 241, 0.3);
  animation: orb-pulse-small 2s infinite ease-in-out;
  /* Ensure we keep transition properties during hold-small state */
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1), 
              box-shadow 4s cubic-bezier(0.25, 0.1, 0.25, 1),
              background-color 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Pulsing effect for the expanded hold state */
@keyframes orb-pulse {
  0% { 
    box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2),
                0 0 0 30px rgba(99, 102, 241, 0.15),
                0 0 0 45px rgba(99, 102, 241, 0.1);
  }
  50% { 
    box-shadow: 0 0 0 20px rgba(99, 102, 241, 0.25),
                0 0 0 40px rgba(99, 102, 241, 0.2),
                0 0 0 60px rgba(99, 102, 241, 0.15);
    opacity: 0.9;
  }
  100% { 
    box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2),
                0 0 0 30px rgba(99, 102, 241, 0.15),
                0 0 0 45px rgba(99, 102, 241, 0.1);
  }
}

/* Subtle pulsing effect for the contracted hold state */
@keyframes orb-pulse-small {
  0% { 
    opacity: 0.8;
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.15),
                0 0 0 0 rgba(99, 102, 241, 0.1),
                0 0 0 0 rgba(99, 102, 241, 0.05);
  }
  50% { 
    opacity: 1;
    box-shadow: 0 0 0 5px rgba(99, 102, 241, 0.15),
                0 0 0 10px rgba(99, 102, 241, 0.1),
                0 0 0 15px rgba(99, 102, 241, 0.05);
  }
  100% { 
    opacity: 0.8;
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.15),
                0 0 0 0 rgba(99, 102, 241, 0.1),
                0 0 0 0 rgba(99, 102, 241, 0.05);
  }
}

/* Animation that gradually fades the box shadows during exhale */
@keyframes exhale-shadows {
  0% {
    box-shadow: 0 0 0 15px rgba(99, 102, 241, 0.2),
                0 0 0 30px rgba(99, 102, 241, 0.15),
                0 0 0 45px rgba(99, 102, 241, 0.1);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0),
                0 0 0 0 rgba(99, 102, 241, 0),
                0 0 0 0 rgba(99, 102, 241, 0);
  }
}

/* GRADIENT CIRCLE ANIMATION */
.orb.gradient-circle {
  width: 220px;
  height: 220px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
  transform: scale(1);
  background: none;
  box-shadow: none;
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.orb.gradient-circle .circle {
  background-color: var(--bg-darker, #010f1c);
  height: 100%;
  width: 100%;
  border-radius: 50%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}

.orb.gradient-circle .gradient-bg {
  background: conic-gradient(
    var(--primary) 0%,
    var(--primary-dark) 40%,
    #fff 40%,
    #fff 60%,
    var(--primary-dark) 60%,
    var(--primary) 100%
  );
  height: 240px;
  width: 240px;
  z-index: 0;
  border-radius: 50%;
  position: absolute;
  top: -10px;
  left: -10px;
}

.orb.gradient-circle .pointer {
  background-color: #fff;
  border-radius: 50%;
  height: 20px;
  width: 20px;
  display: block;
}

.orb.gradient-circle .pointer-container {
  position: absolute;
  top: -30px;
  left: 100px;
  width: 20px;
  height: 140px;
  animation: rotate 7.5s linear forwards infinite;
  transform-origin: bottom center;
  z-index: 2;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Grow and shrink animations */
.orb.gradient-circle.breathing-in {
  transform: scale(1.2);
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.orb.gradient-circle.breathing-out {
  transform: scale(0.8);
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Hold states - maintain the scale with animation */
.orb.gradient-circle.breathing-hold {
  transform: scale(1.2);
  animation: gr-pulse 2s infinite ease-in-out;
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.orb.gradient-circle.breathing-hold-small {
  transform: scale(0.8);
  animation: gr-pulse-small 2s infinite ease-in-out;
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

@keyframes gr-pulse {
  0% { opacity: 1; }
  50% { opacity: 0.8; }
  100% { opacity: 1; }
}

@keyframes gr-pulse-small {
  0% { opacity: 0.8; }
  50% { opacity: 1; }
  100% { opacity: 0.8; }
}

/* Phase indicator animation */
#phase-indicator {
  transition: opacity 0.5s ease;
}

/* Add a mobile adjustment for the gradient-circle pointer */
@media (max-width: 767px) {
  .orb.gradient-circle .pointer-container {
    left: calc(50% - 10px);
    top: -25px;
    height: 120px;
  }
}

/* CHAKRA ANIMATION STYLE - ENHANCED VISIBILITY */
.orb.chakra {
  width: 200px;
  height: 200px;
  position: relative;
  background: transparent;
  transform: scale(1);
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 5;
}

.orb.chakra .wrapper {
  width: 90%;
  height: 90%;
  position: relative;
  transition: all 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

.orb.chakra .group {
  transform-origin: center;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: absolute;
}

.orb.chakra .group:nth-child(1) {
  transform: rotatez(0deg);
}

.orb.chakra .group:nth-child(2) {
  transform: rotatez(45deg);
}

.orb.chakra .group:nth-child(3) {
  transform: rotatez(90deg);
}

.orb.chakra .group:nth-child(4) {
  transform: rotatez(135deg);
}

.orb.chakra .circle {
  transform-origin: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 3px solid rgba(var(--primary-rgb), 0.9);
  box-shadow: 0 0 10px rgba(var(--primary-rgb), 0.5);
}

/* Animations for different breathing phases */
.orb.chakra.breathing-in .wrapper {
  animation: roll 15s linear infinite;
}

.orb.chakra.breathing-in .circle:nth-child(1) {
  animation: movex 4s ease-out forwards;
}

.orb.chakra.breathing-in .circle:nth-child(2) {
  animation: movey 4s ease-out forwards;
}

.orb.chakra.breathing-hold .wrapper {
  animation: roll 15s linear infinite;
}

.orb.chakra.breathing-hold .circle:nth-child(1),
.orb.chakra.breathing-hold .circle:nth-child(2) {
  animation: pulse-chakra 2s infinite ease-in-out;
  background: rgba(var(--primary-rgb), 0.7);
  border-color: rgba(var(--primary-rgb), 0.3);
  transform: translate(25px, 0);
}

.orb.chakra.breathing-out .wrapper {
  animation: roll 15s linear infinite;
}

.orb.chakra.breathing-out .circle:nth-child(1) {
  animation: movex-reverse 4s ease-out forwards;
  background: rgba(var(--primary-rgb), 0.7);
  border-color: rgba(var(--primary-rgb), 0.3);
  transform: translate(25px, 0);
}

.orb.chakra.breathing-out .circle:nth-child(2) {
  animation: movey-reverse 4s ease-out forwards;
  background: rgba(var(--primary-rgb), 0.7);
  border-color: rgba(var(--primary-rgb), 0.3);
  transform: translate(0, 25px);
}

.orb.chakra.breathing-hold-small .wrapper {
  animation: roll 15s linear infinite;
}

.orb.chakra.breathing-hold-small .circle:nth-child(1),
.orb.chakra.breathing-hold-small .circle:nth-child(2) {
  animation: pulse-chakra 2s infinite ease-in-out;
  background: rgba(var(--primary-rgb), 0.2);
  border-color: rgba(var(--primary-rgb), 0.9);
}

/* Add breathing scaling to chakra animation */
.orb.chakra.breathing-in {
  transform: scale(1.1);
}

.orb.chakra.breathing-out {
  transform: scale(0.9);
}

@keyframes movex {
  from {
    transform: translate(0, 0);
    background: rgba(var(--primary-rgb), 0.2);
    border-color: rgba(var(--primary-rgb), 0.9);
  }
  to {
    transform: translate(25px, 0);
    background: rgba(var(--primary-rgb), 0.7);
    border-color: rgba(var(--primary-rgb), 0.3);
  }
}

@keyframes movey {
  from {
    transform: translate(0, 0);
    background: rgba(var(--primary-rgb), 0.2);
    border-color: rgba(var(--primary-rgb), 0.9);
  }
  to {
    transform: translate(0, 25px);
    background: rgba(var(--primary-rgb), 0.7);
    border-color: rgba(var(--primary-rgb), 0.3);
  }
}

@keyframes movex-reverse {
  from {
    transform: translate(25px, 0);
    background: rgba(var(--primary-rgb), 0.7);
    border-color: rgba(var(--primary-rgb), 0.3);
  }
  to {
    transform: translate(0, 0);
    background: rgba(var(--primary-rgb), 0.2);
    border-color: rgba(var(--primary-rgb), 0.9);
  }
}

@keyframes movey-reverse {
  from {
    transform: translate(0, 25px);
    background: rgba(var(--primary-rgb), 0.7);
    border-color: rgba(var(--primary-rgb), 0.3);
  }
  to {
    transform: translate(0, 0);
    background: rgba(var(--primary-rgb), 0.2);
    border-color: rgba(var(--primary-rgb), 0.9);
  }
}

@keyframes pulse-chakra {
  0% { 
    opacity: 1;
    box-shadow: 0 0 5px rgba(var(--primary-rgb), 0.7);
  }
  50% { 
    opacity: 0.8;
    box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.9);
  }
  100% { 
    opacity: 1;
    box-shadow: 0 0 5px rgba(var(--primary-rgb), 0.7);
  }
}

/* COMPLETELY NEW CHAKRA ANIMATION */
.orb.chakra {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background-color: rgba(var(--primary-rgb), 0.1);
  position: relative;
  overflow: visible;
  transform: scale(1);
  transition: transform 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Create concentric circles */
.orb.chakra::before,
.orb.chakra::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  border: 4px solid var(--primary);
  box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.7);
}

.orb.chakra::before {
  width: 60%;
  height: 60%;
  animation: pulse-chakra-1 4s infinite alternate;
}

.orb.chakra::after {
  width: 90%;
  height: 90%;
  animation: pulse-chakra-2 5s infinite alternate;
}

/* Create a ring of small circles */
.orb.chakra .chakra-dot {
  position: absolute;
  width: 15px;
  height: 15px;
  background-color: var(--primary);
  border-radius: 50%;
  box-shadow: 0 0 8px var(--primary);
}

/* Rotate the entire orb */
.orb.chakra .chakra-rotator {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

/* Breathing animations */
.orb.chakra.breathing-in {
  transform: scale(1.2);
  background-color: rgba(var(--primary-rgb), 0.3);
}

.orb.chakra.breathing-in .chakra-rotator {
  animation: rotate-chakra 15s linear infinite;
}

.orb.chakra.breathing-hold {
  transform: scale(1.2);
  background-color: rgba(var(--primary-rgb), 0.3);
}

.orb.chakra.breathing-hold .chakra-rotator {
  animation: rotate-chakra 8s linear infinite;
}

.orb.chakra.breathing-out {
  transform: scale(0.85);
  background-color: rgba(var(--primary-rgb), 0.1);
}

.orb.chakra.breathing-out .chakra-rotator {
  animation: rotate-chakra-reverse 20s linear infinite;
}

.orb.chakra.breathing-hold-small {
  transform: scale(0.85);
  background-color: rgba(var(--primary-rgb), 0.1);
}

.orb.chakra.breathing-hold-small .chakra-rotator {
  animation: pulse-opacity 3s infinite alternate;
}

/* New animations */
@keyframes rotate-chakra {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes rotate-chakra-reverse {
  from { transform: rotate(0deg); }
  to { transform: rotate(-360deg); }
}

@keyframes pulse-chakra-1 {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
}

@keyframes pulse-chakra-2 {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.5;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.1);
    opacity: 0.9;
  }
}

@keyframes pulse-opacity {
  0% { opacity: 0.6; }
  100% { opacity: 1; }
}

/* ULTRA-SIMPLE CHAKRA ANIMATION */
.orb.chakra {
  width: 180px;
  height: 180px;
  border-radius: 50%;
  background-color: var(--primary);
  position: relative;
  box-shadow: 0 0 20px rgba(var(--primary-rgb), 0.7);
  transition: all 4s cubic-bezier(0.25, 0.1, 0.25, 1);
  opacity: 0.7;
}

/* Inner ring */
.orb.chakra::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 70%;
  height: 70%;
  border-radius: 50%;
  border: 5px solid white;
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5), inset 0 0 15px rgba(255, 255, 255, 0.6);
  animation: inner-glow 4s infinite alternate;
}

@keyframes inner-glow {
  0% {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5), inset 0 0 10px rgba(255, 255, 255, 0.4);
  }
  100% {
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8), inset 0 0 20px rgba(255, 255, 255, 0.8);
  }
}

/* Breathing phases */
.orb.chakra.breathing-in {
  transform: scale(1.2);
  opacity: 0.9;
  box-shadow: 0 0 40px rgba(var(--primary-rgb), 0.9);
}

.orb.chakra.breathing-hold {
  transform: scale(1.2);
  opacity: 0.9;
  box-shadow: 0 0 40px rgba(var(--primary-rgb), 0.9);
  animation: pulse-simple 2s infinite alternate, rotate-hold 8s linear infinite;
}

.orb.chakra.breathing-out {
  transform: scale(0.8);
  opacity: 0.6;
  box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.5);
}

.orb.chakra.breathing-hold-small {
  transform: scale(0.8);
  opacity: 0.6;
  box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.5);
  animation: pulse-simple 2s infinite alternate, rotate-hold-small 6s linear infinite;
}

@keyframes pulse-simple {
  0% {
    box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.5);
  }
  100% {
    box-shadow: 0 0 40px rgba(var(--primary-rgb), 0.9);
  }
}

/* Enhanced chakra hold animations with rotation */
@keyframes rotate-hold {
  0% { transform: scale(1.2) rotate(0deg); }
  100% { transform: scale(1.2) rotate(360deg); }
}

@keyframes rotate-hold-small {
  0% { transform: scale(0.8) rotate(0deg); }
  100% { transform: scale(0.8) rotate(360deg); }
}

/* Background effect for orb container */
.orb-container::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(var(--primary-rgb), 0.05) 0%, rgba(var(--primary-rgb), 0) 70%);
  z-index: -1;
  opacity: 0.7;
  transition: all 4s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Expand background effect during inhale */
.orb-container.phase-inhale::before, 
.orb-container.phase-hold::before {
  width: 150%;
  height: 150%;
  opacity: 0.9;
  background: radial-gradient(circle, rgba(var(--primary-rgb), 0.08) 0%, rgba(var(--primary-rgb), 0) 70%);
}

/* Contract background effect during exhale */
.orb-container.phase-exhale::before,
.orb-container.phase-hold-small::before {
  width: 100%;
  height: 100%;
  opacity: 0.6;
  background: radial-gradient(circle, rgba(var(--primary-rgb), 0.03) 0%, rgba(var(--primary-rgb), 0) 60%);
}

/* Cycle completion flash effect */
.cycle-completion-flash {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: rgba(var(--primary-rgb), 0.2);
  z-index: 30;
  animation: flash-effect 1s ease-out forwards;
  pointer-events: none;
}

@keyframes flash-effect {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.7;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}